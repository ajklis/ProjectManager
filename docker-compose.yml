services:
  mysql:
    container_name: db
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password 
      MYSQL_DATABASE: ProjectManager 
      MYSQL_USER: api
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306" 
    volumes:
      - db_data:/var/lib/mysql 
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "api", "-ppassword"]
      interval: 10s
      retries: 5
      start_period: 5s

  api:
    container_name: api
    build:
      context: src/ProjectManager 
      dockerfile: ProjectManager.API/Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
    environment:
      - ASPNETCORE_URLS=http://*:5000
    volumes:
      - ./src/ProjectManager/ProjectManager.API/appsettings.json:/app/appsettings.json
  auth:
    container_name: auth
    build:
      context: src/ProjectManager 
      dockerfile: AuthenticationService/Dockerfile
    ports:
      - "6000:6000"
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
    environment:
      - ASPNETCORE_URLS=http://*:6000
    volumes:
      - ./src/ProjectManager/ProjectManager.API/appsettings.json:/app/appsettings.json
  nginx:
    image: nginx:latest
    container_name: front
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./src/web:/usr/share/nginx/html:ro
volumes:
  db_data:
